[{"/home/cabral/Projects/Fit-App/fit-app/src/app/_app.js":"1","/home/cabral/Projects/Fit-App/fit-app/src/app/alunos/AddClientModal.tsx":"2","/home/cabral/Projects/Fit-App/fit-app/src/app/alunos/EditClientSpreadsheetModal.tsx":"3","/home/cabral/Projects/Fit-App/fit-app/src/app/alunos/RemoveClientModal.tsx":"4","/home/cabral/Projects/Fit-App/fit-app/src/app/alunos/page.tsx":"5","/home/cabral/Projects/Fit-App/fit-app/src/app/layout.tsx":"6","/home/cabral/Projects/Fit-App/fit-app/src/app/page.tsx":"7","/home/cabral/Projects/Fit-App/fit-app/src/app/perfil/EditProfileModal.tsx":"8","/home/cabral/Projects/Fit-App/fit-app/src/app/perfil/page.tsx":"9","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/DayComponent.tsx":"10","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/ExerciseComponent.tsx":"11","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/Spreadsheet_Types.ts":"12","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/Spreadsheet_Utilities.tsx":"13","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/modalAddNewExercise.tsx":"14","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/modalSendSpreadsheet.tsx":"15","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/page.tsx":"16","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/minhas_planilhas/page.tsx":"17","/home/cabral/Projects/Fit-App/fit-app/src/components/LoginModal.tsx":"18","/home/cabral/Projects/Fit-App/fit-app/src/components/Navbar.tsx":"19","/home/cabral/Projects/Fit-App/fit-app/src/components/RegisterModal.tsx":"20","/home/cabral/Projects/Fit-App/fit-app/src/components/ValidationUserInput.tsx":"21","/home/cabral/Projects/Fit-App/fit-app/src/services/ClickOutsideHook.tsx":"22","/home/cabral/Projects/Fit-App/fit-app/src/services/GlobalContext.tsx":"23","/home/cabral/Projects/Fit-App/fit-app/src/services/MyToast.tsx":"24","/home/cabral/Projects/Fit-App/fit-app/src/services/axiosconfig.tsx":"25","/home/cabral/Projects/Fit-App/fit-app/src/services/createQueryString.tsx":"26","/home/cabral/Projects/Fit-App/fit-app/src/svgs/LoadingComponent.tsx":"27","/home/cabral/Projects/Fit-App/fit-app/src/svgs/arrowSvg.tsx":"28","/home/cabral/Projects/Fit-App/fit-app/src/svgs/board.tsx":"29","/home/cabral/Projects/Fit-App/fit-app/src/svgs/checkSvg.tsx":"30","/home/cabral/Projects/Fit-App/fit-app/src/svgs/closedLock.tsx":"31","/home/cabral/Projects/Fit-App/fit-app/src/svgs/dragIndicator.tsx":"32","/home/cabral/Projects/Fit-App/fit-app/src/svgs/dumbbell.tsx":"33","/home/cabral/Projects/Fit-App/fit-app/src/svgs/editSpreadsheet.tsx":"34","/home/cabral/Projects/Fit-App/fit-app/src/svgs/editpencil.tsx":"35","/home/cabral/Projects/Fit-App/fit-app/src/svgs/fitAndApp-logo.tsx":"36","/home/cabral/Projects/Fit-App/fit-app/src/svgs/openedLock.tsx":"37","/home/cabral/Projects/Fit-App/fit-app/src/svgs/profilecircle.tsx":"38","/home/cabral/Projects/Fit-App/fit-app/src/svgs/sendLetter.tsx":"39","/home/cabral/Projects/Fit-App/fit-app/src/svgs/show-hide-eyes.tsx":"40","/home/cabral/Projects/Fit-App/fit-app/src/svgs/smallDumbbell.tsx":"41","/home/cabral/Projects/Fit-App/fit-app/src/svgs/tape.tsx":"42","/home/cabral/Projects/Fit-App/fit-app/src/svgs/trashsvg.tsx":"43","/home/cabral/Projects/Fit-App/fit-app/src/svgs/whatsappSvg.tsx":"44"},{"size":0,"mtime":1700698641096,"results":"45","hashOfConfig":"46"},{"size":2746,"mtime":1700698641096,"results":"47","hashOfConfig":"46"},{"size":3594,"mtime":1700698641096,"results":"48","hashOfConfig":"46"},{"size":2581,"mtime":1700698641096,"results":"49","hashOfConfig":"46"},{"size":4927,"mtime":1700698641096,"results":"50","hashOfConfig":"46"},{"size":1281,"mtime":1700698641096,"results":"51","hashOfConfig":"46"},{"size":14142,"mtime":1700698641096,"results":"52","hashOfConfig":"46"},{"size":2969,"mtime":1700698641096,"results":"53","hashOfConfig":"46"},{"size":2714,"mtime":1700698641096,"results":"54","hashOfConfig":"46"},{"size":6355,"mtime":1700698641096,"results":"55","hashOfConfig":"46"},{"size":9389,"mtime":1700698641096,"results":"56","hashOfConfig":"46"},{"size":1805,"mtime":1700698641096,"results":"57","hashOfConfig":"46"},{"size":4473,"mtime":1700698641096,"results":"58","hashOfConfig":"46"},{"size":9566,"mtime":1700698641096,"results":"59","hashOfConfig":"46"},{"size":3690,"mtime":1700698641096,"results":"60","hashOfConfig":"46"},{"size":8724,"mtime":1701123023562,"results":"61","hashOfConfig":"46"},{"size":8150,"mtime":1700698641096,"results":"62","hashOfConfig":"46"},{"size":3920,"mtime":1700698641096,"results":"63","hashOfConfig":"46"},{"size":4677,"mtime":1701219860810,"results":"64","hashOfConfig":"46"},{"size":6373,"mtime":1700698641096,"results":"65","hashOfConfig":"46"},{"size":1385,"mtime":1700698641096,"results":"66","hashOfConfig":"46"},{"size":836,"mtime":1700698641096,"results":"67","hashOfConfig":"46"},{"size":1043,"mtime":1700698641096,"results":"68","hashOfConfig":"46"},{"size":1288,"mtime":1700698641096,"results":"69","hashOfConfig":"46"},{"size":372,"mtime":1701270826961,"results":"70","hashOfConfig":"46"},{"size":214,"mtime":1700698641096,"results":"71","hashOfConfig":"46"},{"size":268,"mtime":1700698641096,"results":"72","hashOfConfig":"46"},{"size":430,"mtime":1700698641096,"results":"73","hashOfConfig":"46"},{"size":2970,"mtime":1700698641096,"results":"74","hashOfConfig":"46"},{"size":781,"mtime":1700698641096,"results":"75","hashOfConfig":"46"},{"size":789,"mtime":1700698641096,"results":"76","hashOfConfig":"46"},{"size":690,"mtime":1700698641096,"results":"77","hashOfConfig":"46"},{"size":2304,"mtime":1700698641096,"results":"78","hashOfConfig":"46"},{"size":969,"mtime":1700698641096,"results":"79","hashOfConfig":"46"},{"size":3775,"mtime":1700698641096,"results":"80","hashOfConfig":"46"},{"size":6999,"mtime":1700698641096,"results":"81","hashOfConfig":"46"},{"size":972,"mtime":1700698641096,"results":"82","hashOfConfig":"46"},{"size":966,"mtime":1700698641096,"results":"83","hashOfConfig":"46"},{"size":1251,"mtime":1700698641100,"results":"84","hashOfConfig":"46"},{"size":2786,"mtime":1700698641100,"results":"85","hashOfConfig":"46"},{"size":2166,"mtime":1700698641100,"results":"86","hashOfConfig":"46"},{"size":3559,"mtime":1700698641100,"results":"87","hashOfConfig":"46"},{"size":662,"mtime":1700698641100,"results":"88","hashOfConfig":"46"},{"size":1424,"mtime":1700698641100,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lm3sr1",{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/cabral/Projects/Fit-App/fit-app/src/app/_app.js",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/alunos/AddClientModal.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/alunos/EditClientSpreadsheetModal.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/alunos/RemoveClientModal.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/alunos/page.tsx",["229"],[],"\"use client\"\n\nimport myHTTP from \"@/services/axiosconfig\"\nimport { useContext, useEffect, useState } from \"react\"\nimport AddClientModal from \"./AddClientModal\"\nimport EditClientSpreadsheetModal from \"./EditClientSpreadsheetModal\"\nimport { GlobalContext } from \"@/services/GlobalContext\"\nimport RemoveClientModal from \"./RemoveClientModal\"\nimport { TClients, TDbSpreadsheet } from \"../planilha/construtor_planilha/Spreadsheet_Types\"\nimport TrashSvg from \"@/svgs/trashsvg\"\nimport EditSpreadsheetSvg from \"@/svgs/editSpreadsheet\"\n\nconst ManageClients = () => {\n    const globalState = useContext(GlobalContext);\n    const [addClientModal, showAddClientModal] = useState<boolean>(false);\n    const [editModal, showEditModal] = useState<boolean>(false);\n    const [confirmDeleteModal, showConfirmDeleteModal] = useState<boolean>(false);\n    const [clientList, setClientList] = useState<TClients[] | null>();\n    const [triggerRequest, setTriggerRequest] = useState<boolean>(false);\n    const [selectedClientSpreadSheet, setSelectedClientSpreadsheet] = useState<TDbSpreadsheet[] | null>(null);\n    const [ selectedClientEmail, setSelectedClientEmail ] = useState<string | null>(null);\n\n    useEffect(() => {\n        myHTTP.get(\"/client_list\")\n            .then(res => {\n                setClientList(res.data.client_table)\n            })\n            .catch(err => {\n                globalState?.setToast({type:\"warning\", message:err.response.data.msg})\n            })\n    }, [triggerRequest]);\n\n    const handleSelectedClient = (email: string) => {\n        if (email === null) return;\n        myHTTP.post(\"/get_client_spreadsheet\", { client_email: email })\n            .then(res => {\n                setSelectedClientSpreadsheet(res.data.user_spreadsheets);\n            })\n            .catch(err => {\n                globalState?.setToast({type:\"warning\", message:err.response.data.msg})\n            })\n        showEditModal(true)\n    }\nconst handleRemoveClientModal = (clientEmail:string) => {\n        setSelectedClientEmail(clientEmail);\n        showConfirmDeleteModal(true);\n    }\n    return (\n        <>\n            <div className=\"container flex flex-col  m-auto\">\n                <div className=\"flex gap-2 justify-center items-center\">\n                    <div>\n                        <button onClick={() => { showAddClientModal(true) }} className=\"my-btn\">Adicionar Cliente</button>\n                    </div>\n                </div>\n                <div className=\"overflow-x-auto\">\n                    <table className=\"table  w-96 m-auto my-10\">\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>Nome</th>\n                                <th>Email</th>\n                                <th>Planilhas</th>\n                                <th>Deletar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                clientList?.map((ele: TClients, index: number) => {\n                                    return (\n                                        <tr key={ele.name}>\n                                            <th>{String(index)}</th>\n                                            <td>{ele.name}</td>\n                                            <td>{ele.email}</td>\n                                            <td><button onClick={() => {handleSelectedClient(ele.email)}} className=\"my-btn m-0\">\n                                                <EditSpreadsheetSvg></EditSpreadsheetSvg>\n                                            </button></td>\n                                            <td><button onClick={() => {handleRemoveClientModal(ele.email)}} type=\"button\" className=\"my-btn w-[50px]  \">\n                                                    <TrashSvg color=\"#ffffff\"></TrashSvg>\n                                            </button></td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            {\n                addClientModal &&\n                <AddClientModal showAddClientModal={showAddClientModal} triggerRequest={triggerRequest} setTriggerRequest={setTriggerRequest}></AddClientModal>\n            }\n            {editModal &&\n                <EditClientSpreadsheetModal selectedClient={selectedClientSpreadSheet} showEditModal={showEditModal}></EditClientSpreadsheetModal>\n            }\n            {confirmDeleteModal &&\n                <RemoveClientModal showConfirmDeleteModal={showConfirmDeleteModal}  triggerRequest={triggerRequest} setTriggerRequest={setTriggerRequest} selectedClientEmail={selectedClientEmail}></RemoveClientModal>\n            }\n        </>\n    )\n}\n\nexport default ManageClients\n","/home/cabral/Projects/Fit-App/fit-app/src/app/layout.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/page.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/perfil/EditProfileModal.tsx",["230"],[],"\nimport { ValidateEditInput } from '@/components/ValidationUserInput';\nimport { GlobalContext } from '@/services/GlobalContext';\nimport myHTTP from '@/services/axiosconfig';\nimport EditPencilSvg from '@/svgs/editpencil';\nimport { useRouter } from 'next/navigation';\nimport React, { SetStateAction, useContext, useEffect, useState } from 'react'\n\nconst EditProfileModal = ({ userData, showModalEditProfile }: {\n    userData: { name: string, email:string } | undefined,\n    showModalEditProfile: React.Dispatch<SetStateAction<boolean>>,\n}) => {\n    const globalState = useContext(GlobalContext);\n    const [editInput, setEditInput] = useState<{ name: string }>({ name: \"\" });\n\n    const handleEditChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setEditInput((prev: { name: string }) => {\n            return { ...prev, [name]: value };\n        });\n    };\n\n    useEffect(() => {\n        if (userData) setEditInput({ name: userData?.name });\n    }, []);\n\n    const tryEditUser = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        const input = ValidateEditInput(editInput);\n        if (!input.valid) return globalState?.setToast({ type: \"warning\", message: input.message });\n        myHTTP.patch(\"/edit_user\", editInput)\n            .then(res => {\n                globalState?.setToast({ type: \"success\", message: res.data.msg });\n                setTimeout(() => {\n                    window.location.reload();\n                }, 3000)\n            })\n            .catch(err => {\n                globalState?.setToast({ type: \"warning\", message: err.response.data.msg })\n            })\n\n    };\n    return (\n        <form onSubmit={tryEditUser} className='my-form-modal flex flex-col '>\n            <div className='flex justify-between'>\n                    <div className=\"absolute  flex items-center justify-between left-0 top-0 bg-secondary w-full h-14 p-4  \">\n                        <div className=\"flex justify-center items-center font-sans  self-center  uppercase gap-1 text-white \">\n                            <div className=\"w-10 text-white p-2  rounded-sm\">\n                            <EditPencilSvg></EditPencilSvg>\n                            </div>\n                        editar\n                        </div>\n                        <button type=\"button\" onClick={() => { showModalEditProfile(false) }} className=\"self-start text-3xl font-bold leading-3 text-white \">X</button>\n                    </div>\n            </div>\n            <label htmlFor='name' className=\"label-input mt-14\">\n                <input name='name' placeholder='Novo Nome' onChange={handleEditChange} value={editInput?.name} type='text' className='my-input peer ' />\n                <span className=\"span-input \">Novo Nome</span>\n            </label>\n            <button type='submit' className='my-btn'>Alterar</button>\n        </form>\n    )\n}\n\nexport default EditProfileModal\n","/home/cabral/Projects/Fit-App/fit-app/src/app/perfil/page.tsx",["231"],[],"\"use client\"\n\nimport myHTTP from \"@/services/axiosconfig\";\nimport { useContext, useEffect, useState } from \"react\";\nimport EditProfileModal from \"./EditProfileModal\";\nimport { GlobalContext } from \"@/services/GlobalContext\";\nimport { useRouter } from \"next/navigation\";\nimport LoadingComponent from \"@/svgs/LoadingComponent\";\n\nconst ProfilePage = () => {\n    const globalState = useContext(GlobalContext);\n    const router = useRouter();\n    const [userData, setUserData] = useState<{ name: string, email: string }>();\n    const [ modalEditProfile, showModalEditProfile ] = useState<boolean>(false);\n    useEffect(() => {\n        myHTTP.get(\"/user_profile\")\n            .then(res => {\n                setUserData(res.data);\n            })\n            .catch(err => {\n                globalState?.setToast({type:\"warning\", message:err.response.data.msg});\n                router.replace(\"/\");\n                \n            })\n\n    }, []);\n    return (\n        <div className=\" container m-auto my-10\">\n            <div className=\"flex flex-col md:flex-row  justify-center w-[90%] md:w-[40%] gap-10 m-auto  rounded-sm \">\n                <div className=\"card-body\">\n                    <span className=\"card-title\">Nome</span>\n                    <hr />\n                    {userData?.name ?\n                        <span>{userData?.name}</span>\n                        : <div className=\"w-10 h-10\"><LoadingComponent></LoadingComponent></div>                    }\n                    <span className=\"card-title\">Email</span>\n                    <hr />\n                    {userData?.name ? \n                        <span>{userData?.email}</span>\n                        : <div className=\"w-10 h-10\"><LoadingComponent></LoadingComponent></div>                    }\n                    <span className=\"card-title\">Email</span>\n                    \n                    <div className=\"flex  gap-2\">\n                        <button onClick={() => showModalEditProfile(true)} type=\"button\" className=\"my-btn w-full \" >Editar</button>\n                    </div>\n                </div>\n                <div className=\"card-body\">\n                    <span className=\"card-title \">Medidas e Dados</span>\n                    <div className=\"basis-10/12 min-h-[200px] flex justify-center items-center border-2 border-slate-400\">\n                       <span className=\"text-slate-500\">Em breve...</span> \n                    </div>\n\n                </div>\n            </div>\n            {\n                modalEditProfile &&\n                    <EditProfileModal showModalEditProfile={showModalEditProfile} userData={userData}></EditProfileModal>\n            }\n            \n        </div>\n    )\n}\n\nexport default ProfilePage;\n","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/DayComponent.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/ExerciseComponent.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/Spreadsheet_Types.ts",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/Spreadsheet_Utilities.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/modalAddNewExercise.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/modalSendSpreadsheet.tsx",["232"],[],"\"use client\"\n\nimport myHTTP from \"@/services/axiosconfig\";\nimport { SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { validateSpreadsheet } from \"./Spreadsheet_Utilities\";\nimport { GlobalContext } from \"@/services/GlobalContext\";\nimport { TDays } from \"./Spreadsheet_Types\";\nimport { useRouter } from \"next/navigation\";\nimport SendLetterSvg from \"@/svgs/sendLetter\";\n\nexport type TUser = {\n    user_id?: string,\n    name?: string,\n    password?: string,\n    email: string,\n    active?: boolean\n};\n\nconst SendSpreadsheetModal = ({showSendModal, daysArray, setNewDayArray}:{daysArray:TDays[], showSendModal:React.Dispatch<React.SetStateAction<boolean>>,setNewDayArray:React.Dispatch<SetStateAction<TDays[]>>}) => {\n    const globalState = useContext(GlobalContext);\n    const router = useRouter();\n    const [ clientList, setClientList ] = useState<TUser[] | null>();\n    const [selectedClient, setSelectedClient ] = useState< TUser | null>();\n\n    useEffect(() => {\n       myHTTP.get(\"/client_list\") \n        .then(res => {\n                setClientList(res.data.client_table);\n            })\n        .catch(err => {\n                globalState?.setToast({type:\"error\", message:err.response.data.msg});\n            });\n    },[]);\n\n    const handleSendSpreadsheet = (e:React.SyntheticEvent) => {\n        e.preventDefault();\n        const spreadsheetInvalid = validateSpreadsheet(daysArray, globalState);\n        if (spreadsheetInvalid) return globalState?.setToast(spreadsheetInvalid);\n        if (!clientList) return globalState?.setToast({type:\"warning\", message:\"Escolha um cliente\"});\n        myHTTP.post(\"/send_spreadsheet\", { daysArray: daysArray, client_email:selectedClient?.email })\n            .then(res => {\n                globalState?.setToast({type:\"success\", message:res.data.msg});\n                localStorage.removeItem(\"Ongoing_Spreadsheet\");\n                showSendModal(false);\n                setNewDayArray([]);\n            })\n            .catch(err => {\n                globalState?.setToast({type:\"warning\", message:err.response.data.msg});\n            })\n    };\n\n    return (\n        <div className=\"fixed top-0  h-screen w-screen z-10\">\n            <form onSubmit={handleSendSpreadsheet} className=\"my-form-modal flex flex-col gap-2\">\n                    <div className=\"absolute  flex items-center justify-between left-0 top-0 bg-secondary w-full h-14 p-4  \">\n                        <div className=\"flex justify-center items-center font-sans  self-center  uppercase gap-1 text-white \">\n                            <div className=\"w-10 text-white p-2  rounded-sm\">\n                            <SendLetterSvg></SendLetterSvg>\n                            </div>\n                            Enviar\n                        </div>\n                        <button type=\"button\" onClick={() => { showSendModal(false) }} className=\"self-start text-3xl font-bold leading-3 text-white \">X</button>\n                    </div>\n                <select className=\"my-select mt-14\">\n                    <option className=\"\" hidden>Cliente....</option>\n                    {\n                            clientList?.map((ele:TUser) => {\n                                return (\n                                <option key={ele.name} onClick={() => setSelectedClient(ele)}>\n                                        {ele.name + \", \" + ele.email}\n                                    </option>\n                                )\n                            })\n\n                    }\n                </select>\n                <button type=\"submit\" className=\"my-btn\">Enviar</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SendSpreadsheetModal;\n","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/construtor_planilha/page.tsx",["233","234"],[],"'use client'\n\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { DragDropContext, Droppable, Draggable, DropResult } from \"@hello-pangea/dnd\"\nimport DayComponent from \"./DayComponent\"\nimport myHTTP from \"@/services/axiosconfig\"\nimport { TDays } from \"./Spreadsheet_Types\"\nimport { formatExercisesStorage, triggerDnd, validateSpreadsheet } from \"./Spreadsheet_Utilities\"\nimport { GlobalContext } from \"@/services/GlobalContext\"\nimport { useRouter, useSearchParams } from \"next/navigation\"\nimport OpenedLockSvg from \"@/svgs/openedLock\"\nimport ClosedLockSvg from \"@/svgs/closedLock\"\nimport SendSpreadsheetModal from \"./modalSendSpreadsheet\"\nimport Link from \"next/link\"\n\nconst SpreadsheetBuilder: React.FC = () => {\n    const globalState = useContext(GlobalContext);\n    const searchParams = useSearchParams();\n    const router = useRouter();\n    const [editingSpreadsheet, setEditingSpreadsheet] = useState<boolean>(false);\n    const [daysArray, setNewDayArray] = useState<TDays[]>([]);\n    const [sendModal, showSendModal] = useState<boolean>(false);\n    const [previousUrl, setPreviousUrl] = useState<string>(\"\");\n    useEffect(() => {\n        const listOfExercises = localStorage.getItem(\"Exercises_list\");\n        const cachedSpreadsheet = localStorage.getItem(\"Ongoing_Spreadsheet\");\n        if (listOfExercises === null) {\n            myHTTP.get(\"/list_exercises\")\n                .then(res => {\n                    console.log(\"teste\",res.data.exercises);\n                    \n                    formatExercisesStorage(res.data.exercises);\n                })\n                .catch(err => {\n                    globalState?.setToast({ type: \"warning\", message: err.response.data.msg });\n                });\n        };\n        const previousUrlIdCheck = searchParams.get(\"spreadsheet_id\");\n        if (previousUrlIdCheck) {\n\n            myHTTP.get(`/search_spreadsheet/${searchParams.get(\"spreadsheet_id\")}`)\n                .then(res => {\n                    const parsedSpreadsheet = JSON.parse(res.data.spreadsheet.spreadsheet_days);\n                    setEditingSpreadsheet(true);\n                    return setNewDayArray(parsedSpreadsheet);\n                })\n                .catch(err => {\n                    globalState?.setToast({ type: \"error\", message: err.response.data.msg });\n                })\n            const previousUrl = searchParams.get(\"previous_url\")\n            if (previousUrl) {\n                setPreviousUrl(previousUrl);\n            }\n            return;\n        }\n        if (cachedSpreadsheet) setNewDayArray((JSON.parse(cachedSpreadsheet)));\n    }, [])\n\n    useEffect(() => {\n        if (editingSpreadsheet) return;\n        const cachedSpreadsheet = localStorage.getItem(\"Ongoing_Spreadsheet\");\n        if (!cachedSpreadsheet) localStorage.setItem(\"Ongoing_Spreadsheet\", JSON.stringify(daysArray));\n    }, [daysArray]);\n\n    const addNewDay = () => {\n        if (daysArray.length < 7) {\n            const newDay: TDays = { dayUID: crypto.randomUUID(), exercises: [], };\n            return setNewDayArray([...daysArray, newDay]);\n        }\n        globalState?.setToast({ type: \"warning\", message: \"Máximo de 7 dias\" });\n    }\n\n    const handleDnd = (result: DropResult) => {\n        triggerDnd(result, daysArray, setNewDayArray, editingSpreadsheet);\n    }\n\n    const handleSaveSpreadsheet = () => {\n        const spreadsheetInvalid = validateSpreadsheet(daysArray, globalState);\n        if (spreadsheetInvalid) return globalState?.setToast(spreadsheetInvalid);\n\n        myHTTP.post(\"/new_spreadsheet\", daysArray)\n            .then(res => {\n                if (res.status === 202) {\n                    return globalState?.setToast({ type: \"warning\", message: res.data.msg });\n                }\n                globalState?.setToast({ type: \"success\", message: res.data.msg });\n                setNewDayArray([]);\n                localStorage.removeItem(\"Ongoing_Spreadsheet\");\n                router.replace(\"/\");\n\n            })\n            .catch(err => {\n                globalState?.setToast({ type: \"error\", message: err.response.data.msg });\n            })\n    }\n    const handleEditSpreadsheet = () => {\n        const spreadsheetInvalid = validateSpreadsheet(daysArray, globalState);\n        if (spreadsheetInvalid) return globalState?.setToast(spreadsheetInvalid);\n        myHTTP.patch(\"/update_spreadsheet\", { spreadsheet_id: searchParams.get(\"spreadsheet_id\"), spreadsheet_days: daysArray })\n            .then(res => {\n                globalState?.setToast({ type: \"success\", message: res.data.msg });\n                router.push(\"/alunos\");\n            })\n            .catch(err => {\n                globalState?.setToast({ type: \"warning\", message: err.response.data.msg });\n            })\n    };\n\n    return (\n        <DragDropContext onDragEnd={handleDnd} >\n            <div className=\"flex h-screen w-auto bg-white text-neutral \">\n                <button onClick={() => { globalState?.isDragDisabledSwitch(!globalState.isDragDisabledState) }} type=\"button\" className={`fixed  sm:hidden bottom-[10%] right-5 bg-secondary p-2 rounded-full flex justify-center items-center`}>\n                    {globalState?.isDragDisabledState ?\n                        <ClosedLockSvg></ClosedLockSvg>\n                        :\n                        <OpenedLockSvg></OpenedLockSvg>\n                    }\n                </button>\n                <div className=\"flex flex-col w-full h-auto items-center gap-4 m-4  \">\n                    <div className=\"flex gap-4 justify-center rounded-xl\">\n                        <button onClick={addNewDay} type=\"button\" className=\"my-btn\">+</button>\n                        {\n                            editingSpreadsheet ?\n                                <>\n                                    <button onClick={handleEditSpreadsheet} className=\"my-btn\" type=\"button\">\n                                        <span>Alterar</span>\n                                    </button>\n                                    <Link className=\"my-btn\" href={\"/\" + previousUrl}>Voltar</Link>\n                                </>\n                                :\n                                <button onClick={handleSaveSpreadsheet} className=\"my-btn\" type=\"button\">\n                                    <span>Salvar</span>\n                                </button>\n                        }\n                        {\n                            (globalState?.userType === \"trainer\" && !editingSpreadsheet)\n                            &&\n                            <button onClick={() => showSendModal(true)} className=\"my-btn\" type=\"button\">Enviar</button>\n                        }\n                    </div>\n                    <Droppable \n                        direction=\"vertical\"\n                        type=\"droppableDay\" droppableId=\"droppableContainer\">\n                        {(provided, snapshot) => {\n                            return (\n                                <div ref={provided.innerRef} {...provided.droppableProps}  className={`flex flex-col w-full overflow-x-auto  h-auto sm:items-start `}>\n                                    {daysArray.map((e: TDays, index: number) => {\n                                        return (\n                                            <Draggable isDragDisabled={globalState?.isDragDisabledState} key={e.dayUID} draggableId={e.dayUID} index={index}>\n                                                {(provided, snapshot) => {\n                                                    return (\n                                                        <div className={`flex justify-center w-auto h-auto  `} \n                                                            ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                                            <DayComponent setNewDayArray={setNewDayArray} daysArray={daysArray} day={e} index={index} />\n                                                        </div>)\n                                                }}\n                                            </Draggable>\n                                        )\n                                    })\n                                    }\n                                    {provided.placeholder}\n                                </div>)\n                        }}\n                    </Droppable>\n\n                </div>\n                {\n                    sendModal &&\n                    <SendSpreadsheetModal showSendModal={showSendModal} daysArray={daysArray} setNewDayArray={setNewDayArray}></SendSpreadsheetModal>\n                }\n            </div>\n        </DragDropContext>\n    )\n}\n\nexport default SpreadsheetBuilder\n\n","/home/cabral/Projects/Fit-App/fit-app/src/app/planilha/minhas_planilhas/page.tsx",["235"],[],"\"use client\"\nimport { GlobalContext } from \"@/services/GlobalContext\"\nimport myHTTP from \"@/services/axiosconfig\"\nimport { ReactNode, Suspense, useContext, useEffect, useLayoutEffect, useState } from \"react\"\nimport { TDays, TExercise } from \"../construtor_planilha/Spreadsheet_Types\"\nimport TrashSvg from \"@/svgs/trashsvg\"\nimport Link from \"next/link\"\nimport createQueryString from \"@/services/createQueryString\"\nimport { formatDate } from \"../construtor_planilha/Spreadsheet_Utilities\"\ntype TParsedSpreadsheets = {\n    spreadsheet_id: string,\n    spreadsheet_days: [],\n    updatedAt: string,\n}\ntype TDbSpreadsheet = {\n    spreadsheet_id: string,\n    spreadsheet_days: string,\n    updatedAt: string,\n}\nconst MinhasPlanilhas = () => {\n\n    const globalState = useContext(GlobalContext);\n    const [allSpreadsheets, setAllSpreadSheets] = useState<TParsedSpreadsheets[]>();\n    const [selectedSpreadsheet, setSelectedSpreadSheet] = useState<TParsedSpreadsheets>();\n    const [confirmDeleteModal, showConfirmDeleteModal] = useState<boolean>(false);\n    const [userState, setUserState] = useState<string>(\"...\");\n\n\n    useEffect(() => {\n        myHTTP.get(\"/list_user_spreadsheets\")\n            .then(res => {\n                if (!res.data.spreadsheet) return globalState?.setToast({ type: \"warning\", message: res.data.msg });\n                const receivedSpreadsheets = res.data.spreadsheet;\n                let placeholderDaysArray = [] as TParsedSpreadsheets[];\n                receivedSpreadsheets.forEach((ele: TDbSpreadsheet) => {\n                    placeholderDaysArray.push({ spreadsheet_id: ele.spreadsheet_id, spreadsheet_days: JSON.parse(ele.spreadsheet_days), updatedAt: ele.updatedAt });\n                });\n                setAllSpreadSheets(placeholderDaysArray);\n            })\n            .catch(err => {\n                if (err.response.status === 405) return\n                globalState?.setToast({ type: \"warning\", message: err.response.data.msg });\n            });\n    }, []);\n    useEffect(() => {\n        if (!globalState?.userType) {\n        return setUserState(\"Faça Login...\") ;\n        }\n       setUserState(\"Planilhas...\") ;\n    }, [globalState?.userType])\n\n    const handleSelectSpreadsheet = (index: number) => {\n        if (allSpreadsheets !== undefined) setSelectedSpreadSheet(allSpreadsheets[index]);\n    }\n\n    const deleteSpreadsheet = () => {\n        myHTTP.delete(`/delete_spreadsheet/${selectedSpreadsheet?.spreadsheet_id}`)\n            .then(res => {\n                globalState?.setToast({ type: \"success\", message: res.data.msg });\n                setSelectedSpreadSheet(undefined);\n                window.location.reload();\n            })\n            .catch(err => {\n                globalState?.setToast({ type: \"warning\", message: err.response.data.msg });\n            });\n    };\n\n    return (\n        <div className=\"flex flex-col w-full h-auto items-center gap-4 sm:m-4  \">\n            <button className=\"my-btn\" onClick={() => console.log(globalState?.userType)}>Teste</button>\n            <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 mt-4 sm:mt-0  \">\n                <select className=\"my-select px-14\">\n                    <option hidden>\n                        {userState}\n                    </option>\n                    {allSpreadsheets?.map((ele: TParsedSpreadsheets, index: number) => {\n                        return <option onClick={() => handleSelectSpreadsheet(index)} key={index} value={index}>Planilha - {formatDate(ele.updatedAt)}\n                        </option>\n                    })};\n                </select>\n                {\n                    selectedSpreadsheet &&\n                    <>\n                        <button onClick={() => showConfirmDeleteModal(true)} className=\"my-btn w-14\">\n                            <TrashSvg color=\"#ffffff\"></TrashSvg>\n                        </button>\n                        <Link href={`/planilha/construtor_planilha/?${createQueryString(\"spreadsheet_id\", selectedSpreadsheet?.spreadsheet_id)}&${createQueryString(\"previous_url\", \"planilha/minhas_planilhas\")}`} className=\"my-btn\">\n                            Editar</Link>\n                    </>\n                }\n            </div>\n            <div className=\" flex flex-col w-full sm:items-start m-auto  \">\n                {\n                    selectedSpreadsheet?.spreadsheet_days.map((ele: TDays, index: number) => {\n                        return (\n                            <div key={crypto.randomUUID()} className=\"flex justify-center w-auto h-auto  \">\n\n                                <div className=\"sm:flex my-2  bg-base-200 rounded-sm shadow-md w-full mx-4  sm:min-w-[320px]  h-auto  \">\n                                    <div className=\"sm:h-auto flex sm:flex-col  items-center justify-center gap-4 w-auto sm:w-[20px]   p-4 sm:py-8  bg-neutral text-white rounded-t-sm \">\n                                        <span className=\"font-mono  leading-none sm:vertical-text tracking-tighter  \">{(\"Dia \" + String(index + 1))}</span>\n                                    </div>\n                                    {ele.exercises.map((item: TExercise) => {\n                                        return (\n                                            <div key={crypto.randomUUID()} className={\"flex flex-col gap-1 leading-none text-sm min-w-[160px] font-serif  p-2 m-2 shadow-sm  bg-base-100 border-[1px] border-primary \"}>\n                                                <span className=\"font-sans text-base overflow-clip  hover:overflow-visible\">\n                                                    <span>{item.exercise_name}</span>\n                                                </span>\n                                                <span className=\"flex gap-2 items-center  \">\n                                                    <span className=\"font-sans \">Séries</span>\n                                                    <span className=\"text-base  \">{item.sets}</span>\n                                                </span>\n                                                <span className=\"flex gap-2 items-center\">\n                                                    <span className=\"font-sans\">Repetições</span>\n                                                    <span className=\"text-base\">{item.quantity}</span>\n                                                </span>\n                                                <span className=\"flex gap-1 flex-col break-words \">\n                                                    <span className=\"font-sans \">Obs</span>\n                                                    <span className=\"text-xs\">{item.obs}</span>\n                                                </span>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            {\n                confirmDeleteModal &&\n                <div className=\"my-form-modal flex flex-col w-auto   items-center p-5 gap-4 \">\n                    <div className=\"absolute  flex items-center justify-center left-0 top-0 bg-secondary w-full h-14 p-4  \">\n                        <div className=\"flex justify-center items-center font-sans  self-center  uppercase gap-1 text-white \">\n                            <div className=\"w-10 text-white p-1 border-2 border-white  rounded-sm\">\n                                <TrashSvg color=\"#ffffff\"></TrashSvg>\n                            </div>\n                        </div>\n                    </div>\n                    <span className=\" mt-14\">Deseja deletar planilha?</span>\n                    <div className=\"flex gap-4\">\n                        <button onClick={deleteSpreadsheet} className=\"my-btn-red\">Deletar</button>\n                        <button onClick={() => showConfirmDeleteModal(false)} className=\"my-btn \">Cancelar</button>\n                    </div>\n                </div>\n            }\n\n        </div>\n    )\n}\nexport default MinhasPlanilhas;\n","/home/cabral/Projects/Fit-App/fit-app/src/components/LoginModal.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/components/Navbar.tsx",["236"],[],"\"use client\"\nimport { ProfileSvg } from \"@/svgs/profilecircle\"\nimport { useContext, useEffect, useLayoutEffect, useState } from \"react\"\nimport LoginModal from \"./LoginModal\"\nimport RegisterModal from \"./RegisterModal\"\nimport myHTTP from \"@/services/axiosconfig\"\nimport { GlobalContext } from \"@/services/GlobalContext\"\nimport { usePathname, useRouter } from \"next/navigation\"\nimport FitAndAppLogo from \"@/svgs/fitAndApp-logo\"\n\nexport const Navbar = () => {\n    const globalState = useContext(GlobalContext);\n    const router = useRouter();\n    const [loginModal, showLoginModal] = useState<boolean>(false);\n    const [registerModal, showRegisterModal] = useState<boolean>(false);\n    const myUrl = usePathname();\n\n    const handleLogout = () => {\n        myHTTP.get(\"/logout\")\n            .then(res => {\n                globalState?.setToast({ type: \"success\", message: res.data.msg });\n                globalState?.setUserType(null);\n            })\n            .then(() => {\n                showLoginModal(false);\n                router.replace(\"/\");\n            })\n            .catch(err => {\n                if (err.response) globalState?.setToast({ type: \"error\", message: err.response.data.msg });\n            })\n    };\n\n    useLayoutEffect(() => {\n\n        myHTTP.post(\"/check_user\")\n            .then(res => {\n                if (res.data.logged) {\n                    return globalState?.setUserType(res.data.profile);\n                }\n                globalState?.setUserType(null);\n            })\n            .catch(err => {\n                if (err.response) globalState?.setToast({ type: \"warning\", message: err.response.data.msg });\n            })\n    }, [handleLogout]);\n\n    return (\n        <>\n            <div className={`navbar relative z-30 justify-center md:justify-between px-[15vw] 2xl:px-[18vw] p-4 ${myUrl !== \"/\" ? \"bg-neutral\" : \"bg-gray-200/20\"}  `}>\n                <a href=\"/\" className='w-48 md:w-56'>\n                    <FitAndAppLogo></FitAndAppLogo>\n                </a>\n                <div className='flex items-center font-bold gap-4'>\n                    <div className=\"dropdown dropdown-end\">\n                        <label tabIndex={0} className={`${myUrl !== \"/\" ? \"text-secondary\" : \"text-white\"} font-normal font-mono text-sm lg:text-lg m-1 cursor-pointer hover:text-secondary my-list-item`}>PLANILHA</label>\n                        <ul tabIndex={0} className=\"my-dropdown\">\n                            <li className=\"\"><a className=\"my-list-item\" href=\"/planilha/construtor_planilha\">Criar Planilha</a></li>\n                            <li className=\"\"><a className=\"my-list-item\" href=\"/planilha/minhas_planilhas\">Minhas Planilhas</a></li>\n                        </ul>\n                    </div>\n                    <div className=\"dropdown dropdown-end w-6\">\n                        <label tabIndex={0} className={`cursor-pointer w-32 ${myUrl !== \"/\" ? \"text-secondary\" : \"text-white\"} hover:text-secondary`}><ProfileSvg /></label>\n                        <ul tabIndex={0} className=\"my-dropdown\">\n                            {globalState?.userType === null &&\n                                <ul>\n                                    <li><button className=\"my-list-item \" onClick={() => { showLoginModal(true) }}>Login</button></li>\n                                    <li><button className=\"my-list-item\" onClick={() => showRegisterModal(true)} >Cadastrar</button></li>\n                                </ul>\n                            }\n                            {globalState?.userType === \"user\" &&\n                                (<>\n                                    <li><a href=\"/perfil\" className=\"my-list-item\" >Perfil</a></li>\n                                    <li><button className=\"my-list-item\" onClick={handleLogout}>Sair</button></li>\n                                </>)\n                            }\n                            {globalState?.userType === \"trainer\" &&\n                                (<>\n                                    <li><a href=\"/perfil\" className=\"my-list-item\" >Perfil</a></li>\n                                    <li><a href={\"/alunos\"} className=\"my-list-item\" >Alunos</a></li>\n                                    <li><button className=\"my-list-item\" onClick={handleLogout}>Sair</button></li>\n                                </>)\n                            }\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            {loginModal && <LoginModal showLoginModal={showLoginModal}></LoginModal>\n            }\n            {registerModal && <RegisterModal showRegisterModal={showRegisterModal}></RegisterModal>}\n        </>\n    )\n}\n","/home/cabral/Projects/Fit-App/fit-app/src/components/RegisterModal.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/components/ValidationUserInput.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/services/ClickOutsideHook.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/services/GlobalContext.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/services/MyToast.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/services/axiosconfig.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/services/createQueryString.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/LoadingComponent.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/arrowSvg.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/board.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/checkSvg.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/closedLock.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/dragIndicator.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/dumbbell.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/editSpreadsheet.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/editpencil.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/fitAndApp-logo.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/openedLock.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/profilecircle.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/sendLetter.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/show-hide-eyes.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/smallDumbbell.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/tape.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/trashsvg.tsx",[],[],"/home/cabral/Projects/Fit-App/fit-app/src/svgs/whatsappSvg.tsx",[],[],{"ruleId":"237","severity":1,"message":"238","line":31,"column":8,"nodeType":"239","endLine":31,"endColumn":24,"suggestions":"240"},{"ruleId":"237","severity":1,"message":"241","line":26,"column":8,"nodeType":"239","endLine":26,"endColumn":10,"suggestions":"242"},{"ruleId":"237","severity":1,"message":"243","line":26,"column":8,"nodeType":"239","endLine":26,"endColumn":10,"suggestions":"244"},{"ruleId":"237","severity":1,"message":"238","line":33,"column":7,"nodeType":"239","endLine":33,"endColumn":9,"suggestions":"245"},{"ruleId":"237","severity":1,"message":"246","line":57,"column":8,"nodeType":"239","endLine":57,"endColumn":10,"suggestions":"247"},{"ruleId":"237","severity":1,"message":"248","line":63,"column":8,"nodeType":"239","endLine":63,"endColumn":19,"suggestions":"249"},{"ruleId":"237","severity":1,"message":"238","line":44,"column":8,"nodeType":"239","endLine":44,"endColumn":10,"suggestions":"250"},{"ruleId":"237","severity":1,"message":"251","line":45,"column":8,"nodeType":"239","endLine":45,"endColumn":22,"suggestions":"252"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'globalState'. Either include it or remove the dependency array.","ArrayExpression",["253"],"React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.",["254"],"React Hook useEffect has missing dependencies: 'globalState' and 'router'. Either include them or remove the dependency array.",["255"],["256"],"React Hook useEffect has missing dependencies: 'globalState' and 'searchParams'. Either include them or remove the dependency array.",["257"],"React Hook useEffect has a missing dependency: 'editingSpreadsheet'. Either include it or remove the dependency array.",["258"],["259"],"React Hook useLayoutEffect has a missing dependency: 'globalState'. Either include it or remove the dependency array.",["260"],{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"267","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [globalState, triggerRequest]",{"range":"276","text":"277"},"Update the dependencies array to be: [userData]",{"range":"278","text":"279"},"Update the dependencies array to be: [globalState, router]",{"range":"280","text":"281"},"Update the dependencies array to be: [globalState]",{"range":"282","text":"283"},"Update the dependencies array to be: [globalState, searchParams]",{"range":"284","text":"285"},"Update the dependencies array to be: [daysArray, editingSpreadsheet]",{"range":"286","text":"287"},{"range":"288","text":"283"},"Update the dependencies array to be: [globalState, handleLogout]",{"range":"289","text":"290"},[1469,1485],"[globalState, triggerRequest]",[1033,1035],"[userData]",[932,934],"[globalState, router]",[1247,1249],"[globalState]",[2610,2612],"[globalState, searchParams]",[2867,2878],"[daysArray, editingSpreadsheet]",[1990,1992],[1668,1682],"[globalState, handleLogout]"]